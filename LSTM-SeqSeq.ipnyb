{"cells":[{"cell_type":"code","execution_count":null,"id":"cf0dc7a5","metadata":{"id":"cf0dc7a5"},"outputs":[],"source":["import re\n","import pandas as pd\n","import numpy as np\n","\n","\n","# Remove non-alphabetic characters (Data Cleaning)\n","def clean_text(column):\n","\n","    for row in column:\n","        row = re.sub('([A-Z][a-z]+)', r' \\1', re.sub('([A-Z]+)', r' \\1',  str(row))).split()\n","        row = ' '.join(row)\n","        row = re.sub(\"(\\\\t)\", \" \", str(row)).lower()\n","        row = re.sub(\"(\\\\r)\", \" \", str(row)).lower()\n","        row = re.sub(\"(\\\\n)\", \" \", str(row)).lower()\n","\n","    \n","\n","        # Remove the characters - <>()|&©ø\"',;?~*!\n","        row = re.sub(r\"[<>()|&©ø\\[\\]\\'\\\",.\\}`$\\{;@?~*!+=_\\//1234567890]\", \" \", str(row)).lower()\n","        row = re.sub(r\"\\\\b(\\\\w+)(?:\\\\W+\\\\1\\\\b)+\", \"\", str(row)).lower()\n","\n","\n","#         # Replace INC nums to INC_NUM\n","#         row = re.sub(\"([iI][nN][cC]\\d+)\", \"INC_NUM\", str(row)).lower()\n","\n","#         # Replace CM# and CHG# to CM_NUM\n","#         row = re.sub(\"([cC][mM]\\d+)|([cC][hH][gG]\\d+)\", \"CM_NUM\", str(row)).lower()\n","\n","        # Remove punctuations at the end of a word\n","        row = re.sub(\"(\\.\\s+)\", \" \", str(row)).lower()\n","        row = re.sub(\"(\\-\\s+)\", \" \", str(row)).lower()\n","        row = re.sub(\"(\\:\\s+)\", \" \", str(row)).lower()\n","\n","        # Replace any url to only the domain name\n","        try:\n","            url = re.search(r\"((https*:\\/*)([^\\/\\s]+))(.[^\\s]+)\", str(row))\n","            repl_url = url.group(3)\n","            row = re.sub(r\"((https*:\\/*)([^\\/\\s]+))(.[^\\s]+)\", repl_url, str(row))\n","        except:\n","            pass\n","        #row = re.sub('([A-Z][a-z]+)', r' \\1', re.sub('([A-Z]+)', r' \\1',  str(row))).split()\n","        # Remove multiple spaces\n","        row = re.sub(\"(\\s+)\", \" \", str(row)).lower()\n","\n","        # Remove the single character hanging between any two spaces\n","        row = re.sub(\"(\\s+.\\s+)\", \" \", str(row)).lower()\n","        \n","        \n","\n","        yield row"]},{"cell_type":"code","execution_count":null,"id":"941dbfc1","metadata":{"id":"941dbfc1","outputId":"d8a16cc8-f2f7-4b44-a1c4-7c785c6951f4","colab":{"base_uri":"https://localhost:8080/","height":397},"executionInfo":{"status":"error","timestamp":1658988996952,"user_tz":-330,"elapsed":6019,"user":{"displayName":"Rohan Gupta","userId":"11057826761409535167"}}},"outputs":[{"output_type":"error","ename":"MessageError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mMessageError\u001b[0m                              Traceback (most recent call last)","\u001b[0;32m<ipython-input-2-044f5c6b164c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0mgoogle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolab\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mdrive\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdrive\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmount\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"/content/gdrive\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mdf_code\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/gdrive/MyDrive/javascript_Sample_Dataset.csv'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36mmount\u001b[0;34m(mountpoint, force_remount, timeout_ms)\u001b[0m\n\u001b[1;32m    103\u001b[0m       \u001b[0mforce_remount\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mforce_remount\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    104\u001b[0m       \u001b[0mtimeout_ms\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mtimeout_ms\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 105\u001b[0;31m       ephemeral=True)\n\u001b[0m\u001b[1;32m    106\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    107\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/drive.py\u001b[0m in \u001b[0;36m_mount\u001b[0;34m(mountpoint, force_remount, timeout_ms, ephemeral)\u001b[0m\n\u001b[1;32m    118\u001b[0m   \u001b[0;32mif\u001b[0m \u001b[0mephemeral\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    119\u001b[0m     _message.blocking_request(\n\u001b[0;32m--> 120\u001b[0;31m         'request_auth', request={'authType': 'dfs_ephemeral'}, timeout_sec=None)\n\u001b[0m\u001b[1;32m    121\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    122\u001b[0m   \u001b[0mmountpoint\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0m_os\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpanduser\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mmountpoint\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mblocking_request\u001b[0;34m(request_type, request, timeout_sec, parent)\u001b[0m\n\u001b[1;32m    169\u001b[0m   request_id = send_request(\n\u001b[1;32m    170\u001b[0m       request_type, request, parent=parent, expect_reply=True)\n\u001b[0;32m--> 171\u001b[0;31m   \u001b[0;32mreturn\u001b[0m \u001b[0mread_reply_from_input\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mrequest_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtimeout_sec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/google/colab/_message.py\u001b[0m in \u001b[0;36mread_reply_from_input\u001b[0;34m(message_id, timeout_sec)\u001b[0m\n\u001b[1;32m    100\u001b[0m         reply.get('colab_msg_id') == message_id):\n\u001b[1;32m    101\u001b[0m       \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 102\u001b[0;31m         \u001b[0;32mraise\u001b[0m \u001b[0mMessageError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mreply\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    103\u001b[0m       \u001b[0;32mreturn\u001b[0m \u001b[0mreply\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'data'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    104\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mMessageError\u001b[0m: Error: credential propagation was unsuccessful"]}],"source":["from google.colab import drive\n","\n","drive.mount(\"/content/gdrive\")\n","\n","df_code = pd.read_csv('/content/gdrive/MyDrive/javascript_Sample_Dataset.csv')\n","df_code = df_code[:5000]"]},{"cell_type":"code","execution_count":null,"id":"5d4c90c8","metadata":{"id":"5d4c90c8"},"outputs":[],"source":["df_code_p = df_code[[\"code\",\"docstring\"]]\n","df_code_p=df_code_p[:3]"]},{"cell_type":"code","execution_count":null,"id":"faf05c07","metadata":{"id":"faf05c07","outputId":"2d447a50-838a-4159-8f28-9b2633387cdc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656322055643,"user_tz":-330,"elapsed":2,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Find the next separator: space, parens, comma, colon, double-quote, dollar, brackets\n"]}],"source":["print (df_code_p[\"docstring\"][0])"]},{"cell_type":"code","execution_count":null,"id":"7df7d553","metadata":{"id":"7df7d553","colab":{"base_uri":"https://localhost:8080/","height":183},"executionInfo":{"status":"error","timestamp":1658989842155,"user_tz":-330,"elapsed":370,"user":{"displayName":"Rohan Gupta","userId":"11057826761409535167"}},"outputId":"3a436b1b-d653-4dc1-b240-40a82909c42b"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-339e321c7e16>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprocessed_code\u001b[0m\u001b[0;34m=\u001b[0m \u001b[0mclean_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_code_p\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'code'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprocessed_summary\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mclean_text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_code_p\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'docstring'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df_code_p' is not defined"]}],"source":["processed_code= clean_text(df_code_p['code'])\n","processed_summary = clean_text(df_code_p['docstring'])"]},{"cell_type":"code","execution_count":null,"id":"14670d61","metadata":{"id":"14670d61"},"outputs":[],"source":["import spacy\n","from time import time\n","\n","nlp = spacy.load('en_core_web_sm', disable=['ner', 'parser']) \n","\n","# Process text as batches and yield Doc objects in order\n","code = [str(doc) for doc in nlp.pipe(processed_code, batch_size=50)]\n","summary = [ str(doc)  for doc in nlp.pipe(processed_summary, batch_size=50)]\n","\n","#summary = ['_START_ '+ str(doc) + ' _END_' for doc in nlp.pipe(processed_summary, batch_size=50)]"]},{"cell_type":"code","execution_count":null,"id":"896b80eb","metadata":{"id":"896b80eb","colab":{"base_uri":"https://localhost:8080/","height":165},"executionInfo":{"status":"error","timestamp":1665697728208,"user_tz":-330,"elapsed":18,"user":{"displayName":"Adithya Yettapu","userId":"02783425297101200318"}},"outputId":"382fb131-e0c9-4097-810a-fd9eab18a96f"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-e2369f141455>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0msummary\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'summary' is not defined"]}],"source":["print (summary)"]},{"cell_type":"code","execution_count":null,"id":"06f1405b","metadata":{"id":"06f1405b","outputId":"3a10a9e2-7e25-4762-bfc7-f7339ff8a6ee","colab":{"base_uri":"https://localhost:8080/","height":380},"executionInfo":{"status":"error","timestamp":1656322110858,"user_tz":-330,"elapsed":373,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-21-a5a98e522db8>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mdf_code_p\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'code'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcode\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0mdf_code_p\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'docstring'\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0msummary\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf_code_p\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m__setitem__\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   3610\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3611\u001b[0m             \u001b[0;31m# set column\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3612\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_item\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3613\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3614\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_setitem_slice\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkey\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mslice\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_set_item\u001b[0;34m(self, key, value)\u001b[0m\n\u001b[1;32m   3782\u001b[0m         \u001b[0mensure\u001b[0m \u001b[0mhomogeneity\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3783\u001b[0m         \"\"\"\n\u001b[0;32m-> 3784\u001b[0;31m         \u001b[0mvalue\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_sanitize_column\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3785\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3786\u001b[0m         if (\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36m_sanitize_column\u001b[0;34m(self, value)\u001b[0m\n\u001b[1;32m   4507\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4508\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mis_list_like\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4509\u001b[0;31m             \u001b[0mcom\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mrequire_length_match\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4510\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0msanitize_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mvalue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mallow_2d\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4511\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/common.py\u001b[0m in \u001b[0;36mrequire_length_match\u001b[0;34m(data, index)\u001b[0m\n\u001b[1;32m    530\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindex\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    531\u001b[0m         raise ValueError(\n\u001b[0;32m--> 532\u001b[0;31m             \u001b[0;34m\"Length of values \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    533\u001b[0m             \u001b[0;34mf\"({len(data)}) \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    534\u001b[0m             \u001b[0;34m\"does not match length of index \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: Length of values (0) does not match length of index (3)"]}],"source":["\n","\n","df_code_p['code'] = code\n","df_code_p['docstring'] = summary\n","print(df_code_p)"]},{"cell_type":"code","execution_count":null,"id":"0b98fcfa","metadata":{"id":"0b98fcfa","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1656307780015,"user_tz":-330,"elapsed":1162,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}},"outputId":"23527769-b189-4720-da26-f7628ac9d137"},"outputs":[{"output_type":"stream","name":"stdout","text":["0      function next separator str runtime var runtim...\n","1      function parse fn key const str runtime var se...\n","2      function name defaults arg validator check str...\n","3      function scope if arg validator check string s...\n","4      function show url const location get location ...\n","                             ...                        \n","101    function get user groups user var groups if us...\n","102    function get user authorized groups user opera...\n","103    function observable hash observations var enab...\n","104    function this observers enabled true this obse...\n","105    function clear values this observers enabled f...\n","Name: code, Length: 106, dtype: object\n","function next separator str runtime var runtime eol runtime end of line for eol switch str char code at case space case open parenthesis case close parenthesis case c comma case a colon case double-quote case dollar case b open bracket case d close bracket case b open curly brace case d close curly brace return return eol return \n","function parse fn key const str runtime var separator index next separator str runtime var str str slice runtime separator index console log str before str console log str after str var index of str str slice runtime runtime end of line if index of str index of str str slice index of runtime str length if str separator index str separator index after spaces char str runtime separator index this is key return the unquoted string return str else if str in common constants return common constants str else if fn operators str return fn operators str else if str in expression constants return expression constants str else if runtime operators str return runtime operators str else if str in runtime constants return runtime constants str throw new syntax error unexpected str in expression \n","function name defaults arg validator check string name invalid app name arg if arg validator check object defaults defaults if is initialized config rc name defaults is initialized true reference to the current module return module exports \n","function scope if arg validator check string scope scope application scope let config config cache scope if config const data deep defaults deep defaults config scope config default config new app config data if is initialized config cache scope config return config \n","function show url const location get location if location console warn failed to show because there no location object return location href url \n","function multipart parser request file fields limits object define properties this the http request containing multipart body property request type request final request value request the list of file field descriptors property file fields type array final file fields value file fields multipart limits configuration property limits type object final limits value limits final paths of files detected in multipart body property detected files paths type array final detected files paths value if this request throw new type error multipart parser needs request \n","function plain var mw core base mw plain function str return string str mw error function str return mw plain str mw warning function str return mw plain str mw success function str return mw plain str mw accent function str return mw plain str mw muted function str return mw plain str mw to string function return ministyle-plain return mw \n","function dev var mw core base mw error function str return error str mw warning function str return warng str mw success function str return succs str mw accent function str return accnt str mw signal function str return signl str mw muted function str return muted str mw plain function str return plain str mw to string function return ministyle-dev return mw \n","function empty var mw plain mw plain function str str string str var ret for var i str length ret return ret mw to string function return ministyle-empty return mw \n","function influx udp opts base client apply this arguments opts opts this host opts host this port opts port this socket dgram create socket udp \n","function url href if url return var info location parse url this dispatch event onbeforechange info var umi this do rewrite umi info path href info href return this groups this pbseed has umi umi \n","function config if config return this config push config parse build-in rewrite rule for each buildin function key if config key return this config rr key config key delete config key this \n","function action name var am this config am parse event handler from object var event click handler action name name to lower case if is object action event action event event handler action value parse handler if is string handler handler function umi options this redirect umi force input options bind this handler else if is function handler handler handler aop null function event var result event value if is string result this redirect result force input event args bind this push handler to cache if is function handler add event delegate if am event this do init dom event document event this on action delegate bind this am event am event name handler \n","function node message var module node get data module if is module module module dispatch event onmessage message \n","function target message var from message from while target if target get path from do send message target message target target get parent \n","function target message var from message from breadth first search target function node if node get path from do send message node message \n","function do token validation token public key app id var parts token split if parts length ibmlogger get logger debug the token decode failure details token return reject rejection message the token is malformed token rejection message invalid token error if parts trim public key return reject rejection message the token missing the signature token rejection message invalid token error var valid if public key try valid jws verify token public key if valid return reject rejection message the token was verified failed with the public key token rejection message invalid token error catch return reject rejection message an error occurred when verifying the token message token rejection message invalid token error var decoded token jws decode token json:true if decoded token return reject rejection message the token was decoded failed token rejection message invalid token error var payload decoded token payload if payload exp if math round date now payload exp return reject rejection message the token has been expired token rejection message invalid token error if payload aud if payload aud app id return reject rejection message the aud in token is inconsistent with the given application id payload aud app id token rejection message invalid token error if options audience if payload aud options audience return reject rejection message the audience is different from the expected aud options audience token rejection message invalid token error if options issuer if payload iss options issuer return reject rejection message the issuer is different from the expected iss options issuer token rejection message invalid token error return resolve payload \n","function get error message errors if is array errors return uniq pluck errors stack join replace instance else if errors return errors message \n","function message data color var message string if data mon message string \\n if color for in data mon message string string ansi green string ansi reset string ansi cyan data mon string ansi reset \\n else for in data mon message string data mon \\n else if array is array data message data data is format if color message string string ansi italic string format method apply color true data message data else message string string format method apply color false data message data message string string format method apply color format color format data message data else if data message data instanceof error message string string inspect error style color color none data message data else if typeof data message data string message string string inspect style color color none data message data else even if message data is not an array it may contains markup so it should be formated anyway message string data message data message string string format method call color format color format data message data return message string \n","function hash symbol value var i max hash output offset value value at least passes offset value length for i max value length i max hash value char code at i offset hash value char code at hash value char code at i output symbols hash symbols length hash math floor hash symbols length output string ansi fg colors hash fg colors length output hash math floor hash fg colors length output string ansi bg colors hash bg colors length output hash math floor hash bg colors length output string ansi reset return output \n","function known if known return children spec filter function return that name undefined map function return name else return object keys that filter function return naming top naming ca naming loader that ca is not unknown children spec obj undefined \n","function data cb async series cnt utils many shutdown child unknown data function cb var cb function err res if err if data data do not restart var log msg cannot restart children in spec name got error my utils err to pretty str err log log trace log msg cb err else log msg restarting children in spec name due to error my utils err to pretty str err log log trace log msg restart all data cb else cb err res cnt utils many check child children names data cb cb \n","function dispose if typeof this destroy function this destroy else if typeof this stop function this stop else if typeof this kill function this kill else if typeof this end function this end else throw new error unable to dispose object \n","function traverse vars object keys vars map va var item vars va switch typeof item case string vars va ths format item break default traverse item \n","function form cols cllbck level var res cols shell ---- cols map k ---- var parse int r ths directs p cllbck to lines p max ---- res res map re return re border s s pad r ths log ---- return res join border \\n border \n","function do log which what if log console log \\n%s %s\\n which json stringify what null \n","function glob exts let exts flatten deep concat apply null arguments return exts length exts exts exts join \n","function this emit acquiring const on acquisition error err logger debug resource acquisition failed with error err this emit failed err this handle failed const on acquired this item this wait interval if this item on this dispose handle this item once disposal event close err logger info resource lost releasing err this emit lost this transition released this item once error err logger info resource error err this transition failed this item on drain this emit drain this transition acquired const on exception ex logger debug resource acquisition failed with exception ex this emit failed ex this handle failed factory then on acquired on acquisition error catch on exception \n","function str var arr str split var obj root arr shift while arr length obj obj obj arr shift return obj \n","function sub view cfg parent options this config refers to configuration construct options this clear true this parent parent should refer to parent base view instance set the options this options options auto initialize subview when config added this auto init singletons this options auto init singletons if true then new subview configs and types will default to being singletons this default to singletons this options default to singletons allow dot notation in get method if your config keys have dots then set this to false this dot notation this options dot notation undefined this options dot notation true if sub view cfg this add config sub view cfg \n","function name instance singleton var arr is array name name is array instance instance undefined if its simple array of subviews or configs var map arr is object name name instanceof view false name undefined if its mapping of subviews var view options arr instance instanceof view false instance undefined var key var var len if map singleton typeof instance boolean instance undefined for key in map if map has own property key map key is array map key map key map key len map key length if len map key instanceof view this add instance key map key singleton else while len this init key map key singleton return this instance name instanceof view name instance name typeof name string typeof name number name undefined singleton typeof singleton boolean singleton name typeof instance boolean instance undefined if view options this init name view options singleton return this if arr len arr length eslint-disable-line no-cond-assign if arr instanceof view this add instance name arr singleton else while len this init name arr singleton return this if instance this add instance name instance singleton else if name this init name singleton return this \n","function key instance if key instanceof view instance key key undefined this add instance key instance return this \n","function key instances if is array key instances key key undefined var var len instances length while len this add instance key instances return this \n","function map var key for key in map if map has own property key this add instance key map key return this \n","function keys options var views var len keys length var while len views push this init keys options return views \n","function options var key for key in this config if this config has own property key this config key singleton this init key options return this \n","function map var key for key in map if map has own property key this init key map key return this \n","function name config var map is object name is array name name false if map each map this add config this return this return this add config config name \n","function options options options var location options append to options use location return this render this sub views location options clear locations \n","function append to options options options if is object append to append to instanceof backbone false is element append to options append to append to options append to return this render this sub views append to true options clear locations \n","function key options var sub views this get by type key this get key if is array sub views sub views sub views options options return this render sub views options append to options use location options clear locations \n","function key var var len var sub views var sub mgr new sub view manager null this parent this options sub mgr config this config sub views is array key key is function key this filter key this get by type key len sub views length while len sub mgr add sub views subviewtype sub views return sub mgr \n","function func args var is func is function func var desc function sub views var var len sub views length var sub view var func while len sub view sub views func is func func sub view func if func if args func apply sub view args else func call sub views if sub view sub views sub view sub views length desc sub view sub views desc this sub views return this \n","function preserve elems clear configs if preserve elems this remove elems this sub views if this parent this parent sub views this parent sub views this sub views this sub views by type this sub view singletons this sub views by cid this sub views by model cid if clear configs this config return this \n","function key preserve elems var sub views key typeof key string key cid this get key key var len if sub views return this if is array sub views sub views sub views len sub views sub views length if preserve elems this remove elems sub views if len this trigger remove sub views while sub views sub views length this remove sub views shift return this \n","function keys preserve elems var var len keys keys length for i len this remove keys preserve elems return this \n","function sub views sub views sub views this sub views var var len sub views length while len sub views remove return this \n","function sub views sub views sub views this sub views var var len sub views length while len sub views el detach return this \n","function key if key cid return this sub views by cid key cid this sub views by model cid key cid if key index of this dot notation var segs key split var view this parent while segs length view view view subs get segs shift return view return this sub view singletons key this sub views by cid key this sub views by model cid key this sub views by type key \n","function subview subview subview instanceof view true subview this get subview return subview subviewtype \n","function type var confs type pick this config type this config each confs function config this parent config location html this return this \n","function suffix var type suffix is string suffix suffix -container for type in this config if this config has own property type this config type location this set location for type type type suffix return this \n","function var html var template this template if is function template html template result this template vars this el html html this subs render append return this \n","function location replace if typeof location string var parent this parent view this parent view el backbone body location parent find location if replace location html this el return this location append this el return this \n","function event var args slice call arguments var stop propogation var anscestor args unshift event args push this anscestor this while anscestor anscestor trigger apply anscestor args stop propogation anscestor stop propogation if stop propogation stop propogation event stop propogation event false return this anscestor anscestor parent view return this \n","function event var args slice call arguments var trigger function sub views var var len sub views length var sub subs var stop propogation var descend while len descend true sub views trigger apply sub views args stop propogation sub views stop propogation if stop propogation stop propogation event stop propogation event false descend false sub subs sub views sub views if descend sub subs sub subs length trigger sub subs args unshift event args push this trigger this return this \n","function fn name args var func var ancestor this var is func is function fn name while ancestor parent view ancestor ancestor parent view if ancestor func is func fn name ancestor fn name func apply ancestor args return this \n","function test fn var ancestor this while ancestor parent view ancestor ancestor parent view if ancestor test fn ancestor return ancestor return null \n","function events events events result this view events each events function func event var segs event split var listen to segs length this segs this func is function func func this func if listen to this stop listening listen to segs func this listen to listen to segs func this return this \n","function events include added if events include added this added events events clone result this events var group name var event key var callback var added events for group name in this added events if this added events has own property group name added events result this added events group name for event key in added events if added events has own property event key if events event key get func this events event key get func this added events event key callback added events event key if is na parse int group name event key add event namespace event key group name if events event key events event key callback else event key add event namespace event key dibs math round math random rand zero padding events event key callback return base view super delegate events call this events \n","function view instance console assert view instance instanceof backbone base view view instance must be an instance of backbone base view var mixins slice call arguments marinate view instance mixins \n","function view name events obj eslint-disable-line no-shadow console assert view prototype instanceof backbone base view view must backbone base view constructor add events view prototype name events obj \n","function view instance name events obj console assert view instance instanceof backbone base view view instance must be an instance of backbone base view add events view instance name events obj \n","function exec command command str cb var args command str split filter function item return item var command args shift if opts verbose val console log args args var proc spawn command args cwd cwd pids proc pid command str var out var err proc stdout on data function data out data proc stderr on data function data err data proc on close function code delete pids proc pid if err cb err else cb null out \n","function context expression on change callback context var observer this create observer expression on change callback context context observer bind context return observer \n","function context expression on add on remove callback context var observer this create member observer expression on add on remove callback context observer bind context return observer \n","function expression on add on remove callback context if on add on add function if on remove on remove function var observer this create observer expression this create member observer callback bind this on add on remove callback context observer get change records true return observer \n","function expression options if options options is setter return expressions parse setter expression this globals this formatters options extra args else if options options extra args var all args expression this globals this formatters concat options extra args return expressions parse apply expressions all args else return expressions parse expression this globals this formatters \n","function source expression value return this get expression expression is setter true call source value \n","function callback if typeof callback function this after sync callback if this pending sync return false var fallback set timeout this sync now this windows this windows filter this remove closed this pending sync this windows map this queue sync concat fallback return true \n","function callback if typeof callback function this after sync callback if this pending sync clear timeout this pending sync pop this pending sync for each this cancel queue this pending sync null if this syncing this rerun true return false this run sync return true \n","function observer skip update this observers add observer if skip update observer force update next sync true observer sync \n","function configure logging if log in conf if plugin in conf log process env node logger plugin conf log plugin if level in conf log process env node logger level conf log level if customlevels in conf log for var key in conf log customlevels process env node logger level key conf log customlevels key \n","function local storage this version if miapp xml throw new error miapp xml needs to be loaded before miapp local storage if miapp json throw new error miapp json needs to be loaded before miapp local storage if miapp xml is xml miapp xml xml string miapp xml string xml throw new error miapp xml with is xml xml string and string xml needs to be loaded before miapp local storage if miapp json object string miapp json string object throw new error miapp json with object string and string object needs to be loaded before miapp local storage \n","function file storage root scope this version this q this root scope root scope this granted bytes this fs null this url prefix this storage type null this init done false this init promises this init timer null \n","function error message file error var msg switch file error code case file error not found err msg file not found break case file error security err you may need the --allow-file-access-from-files flag if you re debugging your app from file msg security error break case file error abort err msg aborted break case file error not readable err msg file not readable break case file error encoding err msg encoding error break case file error no modification allowed err msg file not modifiable break case file error invalid state err msg invalid state break case file error syntax err msg syntax error break case file error invalid modification err msg invalid modification break case file error quota exceeded err you may need the --allow-file-access-from-files flag if you re debugging your app from file msg quota exceeded break case file error type mismatch err msg type mismatch break case file error path exists err msg file already exists break default msg unknown file error code code file error code type typeof file error break return msg \n","function template delta assert ok array is array template template is not an array assert ok array is array delta delta is not an array this merge step is inefficient n but we are assuming small arrays and delta typically smaller than template delta operation could merge with another component in template with the same name it could delete an existing entry if the module key is null or it could insert new entry in the array the insertion point of new entry is just after the previous operation target if the first operation in delta is new entry it becomes the first element note that delta is not sorted and it could contain duplicates this allow us to change the order in the original list for example if template is b and we want to swap and we can add these three operations in delta remove assign null to s module touch just have an entry with s name that won change add with the original s values inserted after var find entry function result name last op return result some function i if name name last op index return true else return false var delete entry function result name last op if find entry result name last op result splice last op index last op index last op index var insert entry function result entry last op splice prepends and we want after last op index last op index result splice last op index entry var result my utils deep clone template var last op index delta for each function if module null delete entry result name last op else if find entry result name last op result last op index merge obj result last op index false else insert entry result my utils deep clone last op return result \n","function result name last op return result some function i if name name last op index return true else return false \n","function template delta assert equal typeof template object template is not an object assert equal typeof delta object delta is not an object var result my utils deep clone template object keys delta for each function result my utils deep clone delta return result \n","function template delta override name if template name delta name if override name var err new error merge obj description names do not match err template template err delta delta throw err type spec type var result name delta name template name module delta module delta module template module description delta description delta description template description env merge env template env delta env if template components delta components result components merge components template components delta components return result \n","function desc if typeof desc object desc env if array is array desc components desc components for each function patch env f else var err new error patch env not an object err desc desc throw err \n","function prefix var ret function env object keys env for each function var val env if typeof val string val index of prefix var prop name val substring prefix length val length env f prop name else if array is array val ret val else if val typeof val object ret val return ret \n","function scope element attributes var target url null scope target scope target attributes njax archive if scope target throw new error invalid target if typeof scope target string var target scope eval scope target jax bootstrap if target if typeof target string target url target else if target api url target url throw new error jax bootstrap object found not valid no api url or url target url target api url target url else target url target else if scope target api url scope target url throw new error invalid target option target url scope target api url scope target url element on click function e prevent default if target url substr target url target url console log target url target url return http delete target url then function result if scope callback return scope callback result if scope redirect url document location scope redirect url \n","function scope element attrs subscription service query entity scope target scope type success function response scope posting false scope count response length var element angular element element element html scope count error function err throw err \n","function get transport options return new promise resolve reject try const default transport type direct transport options debug true const transport object default transport options const nodemailer transporter nodemailer create transport transport map transport object type transport object transportoptions if transport object type stub const original sendmail nodemailer transporter send mail nodemailer transporter send mail data callback function maildata mailcallback fn return fn call nodemailer transporter maildata function err email status email status response email status response to string mailcallback err email status data callback original sendmail nodemailer transporter use compile html to text resolve nodemailer transporter catch reject \n","function safe computed operands node const operands if typeof node computed boolean node computed the following will pick up single literal computed value string if node key type string literal operands push trait util safe value node key else fully evaluate ast node and children for computed operands operands push ast generator parse node key operands else parent is not computed and parent key is an identifier node operands push trait util safe name node key return operands \n","function circle x r this center new vector x this r \n","function event var element event src element class cache element id name element class name if name index of class element class name class \n","function list var result for each list function size if size return if result result size else result math min result size return result \n","function inject paths paths each paths function path if path inject injected css and js sources are always rooted paths var src mk src path if css test src path return opts inject css push src if js es jsx test src path return opts inject js push src return opts log don\\ know how to inject path path \n","function mk src var src if typeof inject string src async inject src path fspath extname route route ppath join route fspath basename path return src \n","function set opt name opt opt key var key opt key opts key opts key var name opt name fspath basename opt path while opts key name name name opts key name opt opt name name \n","function watch opts src if src pkg opts watch pkgs watch in src src watch return false return typeof src watch object src watch \n","function pkg path pkg pkg pkg pkg pkg var pkg path npm resolve pkg basedir:opts basedir paths:builtins if pkg path throw new error cannot resolve module pkg return pkg path \n","function normalize opts obj basedir pkg obj obj each optskeys function key obj key normalize opts key obj key basedir pkg normalize fq images obj return obj \n","function normalize opts key aval basedir pkg aval aval if is array aval aval aval return map compact aval function val return normalize val basedir pkg \n","function normalize val basedir pkg if typeof val string val path val var original path val path npm treatment of sub-package paths starting with node modules var sub pkg name val path replace ^\\ node modules\\ if sub pkg name original path var sub pkg resolve pkg path:sub pkg name basedir true val path sub pkg dir val path slice sub pkg name length join with basedir if relative directory path else if ^\\ ^\\ ^\\ ^\\ \\ test val path val path fspath join basedir opts basedir val path for brevity on console output val inspect function return original path pkg in pkg val cache cached if pkg val pkg pkg return val \n","function id var conf cache id node get id node get conf xid if node conf return var event input node value event length conf onlength event input event delta conf max event length conf onchange event node inner html event value 剩余 math max event delta 个字 \n","function timeout error message this message message this timeout true error capture stack trace this arguments callee \n","function on function data op iter str context var iter data check task if op data iter str context throw error worker received invalid task parse the serialized function eval may be evil but here we don have much choice eval var iter iter str switch op case map data data map iter break case filter data data filter iter break default data null break process send result data context context \n","function on exec func str par str context var func par data err null try check task if func str context throw error worker received invalid task par par str json parse par str null parse the serialized function eval may be evil but here we don have much choice eval var func func str data func par console log data catch data null err process send result data err err context context \n","function get user groups user var groups if user user permissions user permissions for each function permission var reg new reg exp get update delete -group var permission chunks reg exec permission if permission chunks var operation permission chunks var group id permission chunks if groups group id groups group id groups group id push operation return groups \n","function get user authorized groups user operation var user groups get user groups user var groups for var group id in user groups if user groups group id index of operation groups push group id return groups \n","function observable hash observations var enabled true var observers observers enabled true object define properties this context writable true value this observations value observations namespaces value observers value observers computed observers value observers alias to work with the computed system \n","function this observers enabled true this observers for each this observers bind helper bind this this set namespaced hashes to the same value this namespaces for each this observers start helper bind this this \n","function clear values this observers enabled false this observers for each this observers unbind helper bind this clear values set namespaced hashes to the same value this namespaces for each this observers stop helper bind this clear values this \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXAAAAEICAYAAABGaK+TAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAXw0lEQVR4nO3dfZBddX3H8fcHwoOySAjENRJ0QRkYxpWnLUKluhKwCBT4Ayk0tcDQyfRBCkMUgn1Qq7ahM1GwdYoZQTLKQxBBKCgSA3cs0zZoeJZACcxSkglZoQS4qYiJ3/5xfqvL3bvZe2/2nnt/N5/XzJ17z9Pd79k9+9mzv/O7v6OIwMzM8rNTpwswM7PWOMDNzDLlADczy5QD3MwsUw5wM7NMOcDNzDLlADczy5QDvASSRiSd0C3vY2a9wQFuZj1F0oxO11AWB3ibSfoW8C7g3yRVJV0q6RhJ/yFpk6RHJA2ndX9X0ouS9k/Th0l6WdIh9d6nYztlPU/SZZLWS3pN0lOS5km6TtIXx60zLGnduOkRSZ+W9KikzZKukdQv6QfpfX4kae+07oCkkHS+pOfTcf5nkn4nbb9J0r+Me+/3SLpX0kvpd+R6STNrvvZlkh4FNqc6vluzT1+VdFVbv3Fliwg/2vwARoAT0uv9gJeAkyn+gJ6Ypmen5V8C7gXeAjwGfLLe+/jhR7sewMHA88A70/QA8B7gOuCL49YbBtaNmx4B/gvoT8f5KPAgcASwezquPzvuPQO4Oi37KPA68D3g7eO2/3Ba/73pd2U3YDbwY+DKmq/9MLB/+t2ZA2wGZqblM9L7HdXp7+90PnwGXr4/Br4fEd+PiF9HxArgpxSBDvA5YC/gAWA98LWOVGk7sq0UQXmopF0iYiQinmlw23+OiI0RsR74d2BVRDwUEa8Dt1GE+XhfiIjXI+IeisC9MSJGx21/BEBErI2IFRHxy4j4OfBl4MM17/XViHg+In4RERsoQv7jadlJwIsRsbqp70SXc4CX793Ax9O/iJskbQKOozhjICJ+RXGm8z5gSaTTB7OyRMRa4GKKk4lRSTdJemeDm28c9/oXdab7Wlk/NcXclJp1XgW+Dexb817P10wvozhhIj1/q8F9yIYDvBzjQ/h54FsRMXPcY4+IWAwgaT/gs8A3gSWSdpvkfczaJiJuiIjjKE44AriC4gz5reNWe0eJJf1DqmMwIt5GEciqWaf29+N7wPslvQ84Fbi+7VWWzAFejo3Agen1t4E/kPT7knaWtHu6GDRXkijOvq8BLgA2AF+Y5H3M2kLSwZKOTycPr1OcCf+aoo35ZEmzJL2D4iy9LHsCVeCVdJLz6ak2SM02twA3AA9ExP+0t8TyOcDL8Y/A36Tmkj8ETgc+A/yc4oz80xQ/i7+iuIDzt6np5HzgfEm/V/s+kj5V8j7YjmM3YDHwIvACxTF5OUUTxCMUFwzvAZaXWNPngSOBV4C7gFsb3G4ZMEgPNp8AyE2sZtarJL0LeBJ4R0S82ul6ppvPwM2sJ0naCbgEuKkXwxuKvpFmZj1F0h4U14yeo+hC2JPchGJmlik3oZiZZarUJpR99903Zs+ezR577FHml50Wmzdvzq7uHGuGbde9evXqFyNidskltWzfffeNgYGBCfNz/dlMppf2pxv3ZdLjvszP7R911FFx3333RY5yrDvHmiO2XTfw0+iCMSgafRx11FFN72OOeml/unFfJjvu3YRiZpYpB7iZWaYc4GZmmXKAm5llygFuZpYpB7iZWaYaCnBJMyXdIulJSWskHZuGlFwh6en0vHe7izUzs99q9Az8KuDuiDgEOAxYAywCVkbEQcDKNG1mZiWZMsAl7QV8iOImA0TEGxGxiWJM62VptWXAGe0q0szMJmrko/QHUNx44JuSDgNWAxcB/VHcOBSKQd/7620saQGwAKC/v59qtUqlUnnTOo+tf6Wl4gf326ul7VpRr+5ul2PNkG/dzRpYdFfT24wsPqUNlViuGgnwGRR3wrgwIlZJuoqa5pKICEl1hzWMiKXAUoChoaHo6+tjeHj4Teuc18KBDDAyf3jKdaZLpVKZUHe3y7FmyLdus7I10ga+DlgXEavS9C0Ugb5R0hyA9DzanhLNzKyeKQM8Il4Anpd0cJo1D3gCuAM4N807F7i9LRWamVldjQ4neyFwvaRdgWcpbra7E3CzpAso7npxVntKNDOzehoK8Ih4GBiqs2je9JZjZmaN8icxzcwy5QA3M8uUA9yshqSDJT087vGqpIs9fIR1Gwe4WY2IeCoiDo+Iw4GjgP8DbsPDR1iXcYCbbds84JmIeA4PH2FdptS70ptl6GzgxvS6peEj6g0LUK1WWTi4teliunWIgV4a/iCnfXGAm00ife7hNODy2mXNDB9Rb1iASqXCkvs3N11TmcNHNKOXhj/IaV/chGI2uY8BD0bExjTt4SOsqzjAzSZ3Dr9tPgEPH2FdxgFuVoekPYATgVvHzV4MnCjpaeCENG3WMW4DN6sjIjYD+9TMewkPH2FdxGfgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWWqoeFkJY0ArwFbgS0RMSRpFrAcGABGgLMi4uX2lGlmZrWaOQP/SEQcHhFDaXoRsDIiDgJWpmkzMyvJ9jShnA4sS6+XAWdsfzlmZtaoRu/IE8A96S7cX0933e6PiA1p+QtAf70NJS0AFgD09/dTrVapVCpvWmfh4JYWSmfC+7RTvbq7XY41Q751m5Wt0QA/LiLWS3o7sELSk+MXRkSkcJ8ghf1SgKGhoejr62N4ePhN65y36K6mCwcYmT885TrTpVKpTKi72+VYM+Rbt1nZGmpCiYj16XkUuA04GtgoaQ5Aeh5tV5FmZZM0U9Itkp6UtEbSsZJmSVoh6en0vHen67Qd25QBLmkPSXuOvQY+CjwO3AGcm1Y7F7i9XUWadcBVwN0RcQhwGLAGX7i3LtNIE0o/cJuksfVviIi7Jf0EuFnSBcBzwFntK9OsPJL2Aj4EnAcQEW8Ab0g6HRhOqy0DKsBl5VdoVpgywCPiWYozkNr5LwHz2lGUWYcdAPwc+Kakw4DVwEW0eOG+3gXZarXKwsGtTRfWrRd3e+nCc0770uhFTLMdyQzgSODCiFgl6SpqmkuauXBf74JspVJhyf2bmy6szAv3zeilC8857Ys/Sm820TpgXUSsStO3UAS6L9xbV3GAm9WIiBeA5yUdnGbNA57AF+6ty7gJxay+C4HrJe0KPAucT3HC4wv31jUc4GZ1RMTDwFCdRb5wb13DTShmZplygJuZZcoBbmaWKQe4mVmmHOBmZplygJuZZcoBbmaWKQe4mVmmHOBmZplygJuZZcoBbmaWKQe4mVmmHOBmZplygJuZZcoBbmaWKQe4mVmmHOBmZplygJuZZcoBbmaWKd8T06wOSSPAa8BWYEtEDEmaBSwHBoAR4KyIeLlTNZr5DNxsch+JiMMjYuzmxouAlRFxELAyTZt1TMMBLmlnSQ9JujNNHyBplaS1kpZL2rV9ZZp1hdOBZen1MuCMDtZi1lQTykXAGuBtafoK4CsRcZOkq4ELgH+d5vrMOiWAeyQF8PWIWAr0R8SGtPwFoL/ehpIWAAsA+vv7qVQqE9apVqssHNzadFH13qsbVKvVrq2tWTntS0MBLmkucArwJeASSQKOB/4orbIM+BwOcOsdx0XEeklvB1ZIenL8woiIFO4TpLBfCjA0NBTDw8MT1qlUKiy5f3PTRY3Mn/he3aBSqVBvP3OU0740egZ+JXApsGea3gfYFBFb0vQ6YL96G9aejdT767ZwcEudLadW5l/JnP4qj8mxZuiOuiNifXoelXQbcDSwUdKciNggaQ4w2tEibYc3ZYBLOhUYjYjVkoab/QK1ZyN9fX0T/rqdt+iuZt8WKPdsJKe/ymNyrBk6X7ekPYCdIuK19PqjwN8DdwDnAovT8+0dK9KMxs7APwicJulkYHeKNvCrgJmSZqSz8LnA+vaVaVaqfuC2oqWQGcANEXG3pJ8AN0u6AHgOOKuDNZpNHeARcTlwOUA6A/9URMyX9B3gTOAmfDZiPSQingUOqzP/JWBe+RWZ1bc9/cAvo7iguZaiTfya6SnJzMwa0dQnMSOiAlTS62cpLuyYmVkH+JOYZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbTULSzpIeknRnmj5A0ipJayUtl7Rrp2u0HZsD3GxyFwFrxk1fAXwlIt4LvAxc0JGqzBIHuFkdkuYCpwDfSNMCjgduSassA87oTHVmhaZuamy2A7kSuBTYM03vA2yKiC1peh2wX70NJS0AFgD09/dTqVQmrFOtVlk4uLXpouq9VzeoVqtdW1uzctoXB7hZDUmnAqMRsVrScLPbR8RSYCnA0NBQDA9PfItKpcKS+zc3XdvI/KbLKUWlUqHefuYop31xgJtN9EHgNEknA7sDbwOuAmZKmpHOwucC6ztYo5nbwM1qRcTlETE3IgaAs4F7I2I+cB9wZlrtXOD2DpVoBjjAzZpxGXCJpLUUbeLXdLge28FN2YQiaXfgx8Buaf1bIuKzkg4AbqI4kFcDn4iIN9pZrFnZIqICVNLrZ4GjO1mP2XiNnIH/Ejg+Ig4DDgdOknQM7hNrZtZRUwZ4FKppcpf0CNwn1sysoxrqhSJpZ4pmkvcCXwOeocU+sfX6WC4c3FJny6mV2Vczp76hY3KsGfKt26xsDQV4RGwFDpc0E7gNOKTRL1DbJ7avr29CH8vzFt3V6Nu9SZl9YnPqGzomx5oh37rNytZUL5SI2ETRlepYUp/YtMh9Ys3MSjZlgEuanc68kfQW4ESKAX7cJ9bMrIMaaUKZAyxL7eA7ATdHxJ2SngBukvRF4CHcJ9bMrFRTBnhEPAocUWe++8SamXWQP4lpZpYpB7iZWaYc4GZmmXKAm5llygFuZpYpB7iZWaYc4GZmmXKAm5llygFuZpYpB7iZWaYc4GZmmXKAm9WQtLukByQ9Iulnkj6f5h8gaZWktZKWS9q107Xajs0BbjaR7wNrWXCAm9XwfWAtFw3dUs1sRzOd94Gtd3/ParXKwsGtTdfVrfcK7aX7mOa0Lw5wszqm8z6w9e7vWalUWHL/5qbrKvM+sM3opfuY5rQvbkIx2wbfB9a6mQPcrIbvA2u5cBOK2US+D6xlwQFuVsP3gbVcuAnFzCxTDnAzs0w5wM3MMuUANzPLlAPczCxTWfdCGVh0V9PbjCw+pQ2VmJmVb8ozcEn7S7pP0hNpaM2L0vxZklZIejo9793+cs3MbEwjTShbgIURcShwDPCXkg4FFgErI+IgYGWaNjOzkkwZ4BGxISIeTK9fo/hI8X7A6RRDaoKH1jQzK11TbeCSBig+obYK6I+IDWnRC0D/JNu8aWjNekM1LhzcUmfL9mh1mMichpgck2PNkG/dZmVrOMAl9QHfBS6OiFcl/WZZRISkqLdd7dCafX19E4ZqPK+Fi5GtanU4zpyGmByTY82Qb91mZWuoG6GkXSjC+/qIuDXN3ihpTlo+BxhtT4lmZlZPI71QRDHq2pqI+PK4RXdQDKkJHlrTzKx0jTShfBD4BPCYpIfTvM8Ai4GbJV0APAec1Z4SzWyMP/tg400Z4BFxP6BJFs+b3nLMzKxR/ii9mVmmHOBmZplygJuZZcoBbmaWKQe4WQ0P4Ga5cICbTeQB3CwLDnCzGh7AzXKR9Q0dzNptOgZwqzcwV7VaZeHg1ukvuI4yBgbrpQHIctoXB7jZJKZrALd6A3NVKhWW3L+5HWVP0OoAbs3opQHIctoXN6GY1eEB3CwHDnCzGh7AzXLhJhSziTyAm2XBAW5WwwO4WS7chGJmlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWXKAW5mlikHuJlZphzgZmaZcoCbmWVqysGsJF0LnAqMRsT70rxZwHJgABgBzoqIl9tX5vQZWHRX09uMLD6lDZWYmW2fRs7ArwNOqpnnm7uamXXYlAEeET8G/rdmtm/uambWYa2OB97QzV1h4g1e690wdOHglhbLKEelUsnqRqdjcqwZ8q3brGzbfUOHbd3cNS1/0w1e+/r6Jtww9LwW2qXLNDJ/OKsbnY7JsWbIt26zsrXaC8U3dzUz67BWA9w3dzUz67ApA1zSjcB/AgdLWpdu6LoYOFHS08AJadqsZ0i6VtKopMfHzZslaYWkp9Pz3p2s0ayRXijnRMSciNglIuZGxDUR8VJEzIuIgyLihIio7aVilrvrcPdZ63L+JKZZHe4+aznY7l4oZjuQhrrP1nadrdclslqtsnBwa5vKfLMyumT2UtfPnPbFAW7Wgm11n63tOluvS2SlUmHJ/ZvbWuOYkfkTv/5066Wunznti5tQzBrn7rPWVRzgZo1z91nrKg5wszrcfdZy4DZwszoi4pxJFs0rtRCzbfAZuJlZpnwG3oCBRXexcHBLU4Nu+SYQZtZuPgM3M8uUA9zMLFMOcDOzTDnAzcwy5QA3M8uUA9zMLFPuRmjW4wZauOesu8HmwWfgZmaZcoCbmWXKTSht0sq/reB/Xc2scT4DNzPLlAPczCxTDnAzs0y5DbzLuMuXmTXKZ+BmZplygJuZZcpNKD1gsmaXbd2EopVml1a7RjZr4eAWhkv5SmZ5264Al3QScBWwM/CNiPBNXq2n+ZjftrL+yLeizGtFZV3LarkJRdLOwNeAjwGHAudIOrTV9zPrdj7mrdtsTxv40cDaiHg2It4AbgJOn56yzLqSj3nrKoqI1jaUzgROiog/TdOfAD4QEZ+sWW8BsCBNHgy8BLzYcsWdsy/51Z1jzbDtut8dEbPLLGbMdhzzT9V5u1x/NpPppf3pxn2pe9y3/SJmRCwFlo5NS/ppRAy1++tOtxzrzrFmyLfuMbXHfD2572OtXtqfnPZle5pQ1gP7j5uem+aZ9Sof89ZVtifAfwIcJOkASbsCZwN3TE9ZZl3Jx7x1lZabUCJii6RPAj+k6FJ1bUT8rIFNt/mvZRfLse4ca4YurXs7jvl6unIft0Mv7U82+9LyRUwzM+ssf5TezCxTDnAzs0yVGuCSTpL0lKS1khaV+bWnIulaSaOSHh83b5akFZKeTs97p/mS9NW0H49KOrJDNe8v6T5JT0j6maSLur1uSbtLekDSI6nmz6f5B0halWpbni4SImm3NL02LR8ou+bp1s2/B/XkeJxNRdLOkh6SdGeazvP4i4hSHhQXfZ4BDgR2BR4BDi3r6zdQ34eAI4HHx837J2BRer0IuCK9Phn4ASDgGGBVh2qeAxyZXu8J/DfFR7y7tu70tfvS612AVamWm4Gz0/yrgT9Pr/8CuDq9PhtY3uljZTv3v6t/D3rlOGtgny4BbgDuTNNZHn9lfsOOBX44bvpy4PJOfwNqahyoCfCngDnp9RzgqfT668A59dbrcP23AyfmUjfwVuBB4AMUn3ybUXusUPT4ODa9npHWU6e/19uxz13/e9Brx1md+ucCK4HjgTvTH5osj78ym1D2A54fN70uzetm/RGxIb1+AehPr7tuX9K/dkdQnNF2dd3p39eHgVFgBcUZ6aaI2FKnrt/UnJa/AuxTbsXTqit+Bq3K6TjbhiuBS4Ffp+l9yPT480XMBkXxJ7gr+1xK6gO+C1wcEa+OX9aNdUfE1og4nOJM6GjgkA6XZA3I7TirR9KpwGhErO50LdOhzADP8WPIGyXNAUjPo2l+1+yLpF0ofqmuj4hb0+yurxsgIjYB91H8yzpT0tgHy8bX9Zua0/K9KAZEy1VX/QwalfNxVuODwGmSRihGkzyeYnz3LI+/MgM8x48h3wGcm16fS9H2Nzb/T9LV9mOAV8b9K1kaSQKuAdZExJfHLerauiXNljQzvX4LRVvqGoogP3OSmsf25Uzg3nS2l6vsfg9yPM4mExGXR8TciBig+N7fGxHzyfX4K/niwckUV7CfAf660xcAamq7EdgA/IqiDewCiraulcDTwI+AWWldUQzs/wzwGDDUoZqPo/i39VHg4fQ4uZvrBt4PPJRqfhz4uzT/QOABYC3wHWC3NH/3NL02LT+w08fKNHwPuvb3oFeOswb3a5jf9kLJ8vjzR+nNzDLli5hmZplygJuZZcoBbmaWKQe4mVmmHOBmZplygJuZZcoBbmaWqf8HYoJAa8snZYwAAAAASUVORK5CYII=\n"},"metadata":{"needs_background":"light"}}],"source":[" import matplotlib.pyplot as plt\n","\n"," text_count = []\n"," summary_count = []\n","\n","\n"," print(df_code_p['code'])\n"," for sent in df_code_p['code']:\n","     print (sent)\n","     text_count.append(len(sent.split()))\n","    \n"," for sent in df_code_p['docstring']:\n","     summary_count.append(len(sent.split()))\n","\n"," graph_df = pd.DataFrame() \n","\n"," graph_df['text'] = text_count\n"," graph_df['summary'] = summary_count\n","\n"," graph_df.hist(bins = 10)\n"," plt.show()"]},{"cell_type":"code","execution_count":null,"id":"542b4734","metadata":{"id":"542b4734","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1656307797651,"user_tz":-330,"elapsed":412,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}},"outputId":"44582b0f-01ee-4c8c-d8ab-b3510667e9cb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                 code  \\\n","0   function show url const location get location ...   \n","1   function plain var mw core base mw plain funct...   \n","2   function dev var mw core base mw error functio...   \n","3   function empty var mw plain mw plain function ...   \n","4   function url href if url return var info locat...   \n","5   function config if config return this config p...   \n","6   function node message var module node get data...   \n","7   function target message var from message from ...   \n","8   function target message var from message from ...   \n","9   function get error message errors if is array ...   \n","10  function hash symbol value var i max hash outp...   \n","11  function dispose if typeof this destroy functi...   \n","12  function traverse vars object keys vars map va...   \n","13  function form cols cllbck level var res cols s...   \n","14  function do log which what if log console log ...   \n","15  function str var arr str split var obj root ar...   \n","16  function configure logging if log in conf if p...   \n","17  function local storage this version if miapp x...   \n","18  function file storage root scope this version ...   \n","19  function scope element attrs subscription serv...   \n","20  function circle x r this center new vector x t...   \n","21  function event var element event src element c...   \n","22  function list var result for each list functio...   \n","23  function set opt name opt opt key var key opt ...   \n","24  function pkg path pkg pkg pkg pkg pkg var pkg ...   \n","25  function normalize opts key aval basedir pkg a...   \n","26  function id var conf cache id node get id node...   \n","27  function timeout error message this message me...   \n","28  function on function data op iter str context ...   \n","29  function on exec func str par str context var ...   \n","30  function this observers enabled true this obse...   \n","\n","                                              summary  \n","0                                                show  \n","1                                          plain text  \n","2              todo inline wrap method debug wrappers  \n","3                                 return empty spaces  \n","4                          check event need delegated  \n","5                                      regist rewrite  \n","6                                        send message  \n","7           send message to every node in target path  \n","8                 broadcast to all target descendants  \n","9                  convert errors given by jsonschema  \n","10                           naive crc-like algorithm  \n","11                                               flow  \n","12                                        format vars  \n","13                                           privates  \n","14                                             ------  \n","15  finds globally dot noted namespaced objects fr...  \n","16                   default configuration of logging  \n","17                                        constructor  \n","18                                        constructor  \n","19  template url templates directives njax comment...  \n","20                      this is the equation x y ² r²  \n","21                                      enter element  \n","22                         get min value but not zero  \n","23  assign unique name to opt by indexing opts opt...  \n","24  resolve package path given package name or pkg...  \n","25                          normalize single opts key  \n","26                                       input change  \n","27     timeout error param string message constructor  \n","28                         handle functional requests  \n","29                               handle exec requests  \n","30         starts the observers watching their values  "],"text/html":["\n","  <div id=\"df-6e8b98c1-f7f2-473e-8adf-7b29090171f7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>code</th>\n","      <th>summary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>function show url const location get location ...</td>\n","      <td>show</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>function plain var mw core base mw plain funct...</td>\n","      <td>plain text</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>function dev var mw core base mw error functio...</td>\n","      <td>todo inline wrap method debug wrappers</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>function empty var mw plain mw plain function ...</td>\n","      <td>return empty spaces</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>function url href if url return var info locat...</td>\n","      <td>check event need delegated</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>function config if config return this config p...</td>\n","      <td>regist rewrite</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>function node message var module node get data...</td>\n","      <td>send message</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>function target message var from message from ...</td>\n","      <td>send message to every node in target path</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>function target message var from message from ...</td>\n","      <td>broadcast to all target descendants</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>function get error message errors if is array ...</td>\n","      <td>convert errors given by jsonschema</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>function hash symbol value var i max hash outp...</td>\n","      <td>naive crc-like algorithm</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>function dispose if typeof this destroy functi...</td>\n","      <td>flow</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>function traverse vars object keys vars map va...</td>\n","      <td>format vars</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>function form cols cllbck level var res cols s...</td>\n","      <td>privates</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>function do log which what if log console log ...</td>\n","      <td>------</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>function str var arr str split var obj root ar...</td>\n","      <td>finds globally dot noted namespaced objects fr...</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>function configure logging if log in conf if p...</td>\n","      <td>default configuration of logging</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>function local storage this version if miapp x...</td>\n","      <td>constructor</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>function file storage root scope this version ...</td>\n","      <td>constructor</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>function scope element attrs subscription serv...</td>\n","      <td>template url templates directives njax comment...</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>function circle x r this center new vector x t...</td>\n","      <td>this is the equation x y ² r²</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>function event var element event src element c...</td>\n","      <td>enter element</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>function list var result for each list functio...</td>\n","      <td>get min value but not zero</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>function set opt name opt opt key var key opt ...</td>\n","      <td>assign unique name to opt by indexing opts opt...</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>function pkg path pkg pkg pkg pkg pkg var pkg ...</td>\n","      <td>resolve package path given package name or pkg...</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>function normalize opts key aval basedir pkg a...</td>\n","      <td>normalize single opts key</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>function id var conf cache id node get id node...</td>\n","      <td>input change</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>function timeout error message this message me...</td>\n","      <td>timeout error param string message constructor</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>function on function data op iter str context ...</td>\n","      <td>handle functional requests</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>function on exec func str par str context var ...</td>\n","      <td>handle exec requests</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>function this observers enabled true this obse...</td>\n","      <td>starts the observers watching their values</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e8b98c1-f7f2-473e-8adf-7b29090171f7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e8b98c1-f7f2-473e-8adf-7b29090171f7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e8b98c1-f7f2-473e-8adf-7b29090171f7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}],"source":["max_code_len = 100\n","max_summary_len =10\n","\n","\n","# Select the Summaries and Text which fall below max length \n","\n","import numpy as np\n","\n","cleaned_code = np.array(df_code_p['code'])\n","cleaned_summary= np.array(df_code_p['docstring'])\n","\n","short_text = []\n","short_summary = []\n","\n","for i in range(len(cleaned_code)):\n","    if len(cleaned_summary[i].split()) <= max_summary_len and len(cleaned_code[i].split()) <= max_code_len:\n","        short_text.append(cleaned_code[i])\n","        short_summary.append(cleaned_summary[i])\n","        \n","post_code = pd.DataFrame({'code': short_text,'summary': short_summary})\n","\n","post_code.head(100)"]},{"cell_type":"code","execution_count":null,"id":"ef5fce89","metadata":{"id":"ef5fce89","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1656307803620,"user_tz":-330,"elapsed":769,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}},"outputId":"6e6cde52-8a4b-440a-f6c8-0dfb8923bc17"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                code  \\\n","0  function show url const location get location ...   \n","1  function plain var mw core base mw plain funct...   \n","\n","                     summary  \n","0         sostok show eostok  \n","1  sostok  plain text eostok  "],"text/html":["\n","  <div id=\"df-f34437b3-d0ec-4c9f-a744-37087dd89b46\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>code</th>\n","      <th>summary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>function show url const location get location ...</td>\n","      <td>sostok show eostok</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>function plain var mw core base mw plain funct...</td>\n","      <td>sostok  plain text eostok</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f34437b3-d0ec-4c9f-a744-37087dd89b46')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f34437b3-d0ec-4c9f-a744-37087dd89b46 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f34437b3-d0ec-4c9f-a744-37087dd89b46');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":16}],"source":["post_code['summary'] = post_code['summary'].apply(lambda x: 'sostok ' + x \\\n","        + ' eostok')\n","\n","post_code.head(2)"]},{"cell_type":"code","execution_count":null,"id":"6e2b3685","metadata":{"id":"6e2b3685"},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","x_train, x_validation, y_train, y_validation = train_test_split(\n","    np.array(post_code[\"code\"]),\n","    np.array(post_code[\"summary\"]),\n","    test_size=0.15,\n","    random_state=0,\n","    shuffle=True,\n",")"]},{"cell_type":"code","execution_count":null,"id":"81373b88","metadata":{"id":"81373b88","outputId":"6b3ce2ac-5e9d-4737-aecf-f5fd4fbd309a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307815365,"user_tz":-330,"elapsed":456,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["% of not frequent words in vocabulary:  77.02127659574468\n"]}],"source":["# Tokenize the text to get the vocab count \n","from tensorflow.keras.preprocessing.text import Tokenizer \n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","# Prepare a tokenizer on training data\n","x_tokenizer = Tokenizer() \n","x_tokenizer.fit_on_texts(list(x_train))\n","\n","threshold = 5\n","\n","cnt_infrequent = 0\n","total_cnt = 0\n","\n","for key, value in x_tokenizer.word_counts.items():\n","    total_cnt = total_cnt + 1\n","    if value < threshold:\n","        cnt_infrequent = cnt_infrequent + 1\n","\n","    \n","print(\"% of not frequent words in vocabulary: \", (cnt_infrequent / total_cnt) * 100)"]},{"cell_type":"code","execution_count":null,"id":"edd5d7f3","metadata":{"id":"edd5d7f3","outputId":"0fc3dc44-e286-4578-ea9f-5d5927db9940","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307822128,"user_tz":-330,"elapsed":394,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[[1, 5, 7, 7, 19, 1, 6, 4, 19, 6, 7, 1, 6, 4, 6, 7, 1, 6, 4, 6, 7, 1, 6, 4, 6, 7, 1, 6, 4, 6, 7, 1, 6, 4, 6, 7, 20, 1, 6, 4, 20, 6, 7, 23, 12, 1, 4, 4, 7], [1, 6, 6, 5, 21, 50, 3, 6, 26, 19, 6, 40, 6, 50, 1, 49, 5, 6, 21, 18, 21, 21, 50, 32, 21], [1, 5, 5, 23, 4, 18, 4], [1, 5, 51, 38, 51, 51, 51, 12, 51, 51, 12, 51, 51, 12, 4], [1, 19, 16, 2, 16, 16, 2, 19, 2]]\n","Size of vocabulary in X = 55\n"]}],"source":["# Prepare a tokenizer, again -- by not considering the rare words\n","x_tokenizer = Tokenizer(num_words = total_cnt - cnt_infrequent) \n","x_tokenizer.fit_on_texts(list(x_train))\n","\n","# Convert text sequences to integer sequences \n","x_train_seqs = x_tokenizer.texts_to_sequences(x_train) \n","x_validation_seqs = x_tokenizer.texts_to_sequences(x_validation)\n","print (x_validation_seqs)\n","# Pad zero upto maximum length\n","x_train = pad_sequences(x_train_seqs,  maxlen=max_code_len, padding='post')\n","x_validation = pad_sequences(x_validation_seqs, maxlen=max_code_len, padding='post')\n","\n","# Size of vocabulary (+1 for padding token)\n","x_voc = x_tokenizer.num_words + 1\n","\n","\n","print(\"Size of vocabulary in X = {}\".format(x_voc))"]},{"cell_type":"code","execution_count":null,"id":"69bd804b","metadata":{"id":"69bd804b","outputId":"60d75639-8d3d-48a0-9be6-79949221fabb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307829093,"user_tz":-330,"elapsed":702,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["% of rare words in vocabulary: 97.82608695652173\n","Size of vocabulary in Y = 3\n"]}],"source":["# Prepare a tokenizer on testing data\n","y_tokenizer = Tokenizer()   \n","y_tokenizer.fit_on_texts(list(y_train))\n","\n","threshold = 5\n","\n","cnt_infrequent = 0\n","total_cnt = 0\n","\n","for key, value in y_tokenizer.word_counts.items():\n","    total_cnt = total_cnt + 1\n","    if value < threshold:\n","        cnt_infrequent = cnt_infrequent + 1\n","    \n","print(\"% of rare words in vocabulary:\",(cnt_infrequent / total_cnt) * 100)\n","\n","# Prepare a tokenizer, again -- by not considering the rare words\n","y_tokenizer = Tokenizer(num_words = total_cnt - cnt_infrequent) \n","y_tokenizer.fit_on_texts(list(y_train))\n","\n","# Convert text sequences to integer sequences \n","y_train_seqs = y_tokenizer.texts_to_sequences(y_train) \n","y_validation_seqs = y_tokenizer.texts_to_sequences(y_validation)\n","\n","# Pad zero upto maximum length\n","y_train = pad_sequences(y_train_seqs,  maxlen=max_summary_len, padding='post')\n","y_validation = pad_sequences(y_validation_seqs, maxlen=max_summary_len, padding='post')\n","\n","# Size of vocabulary (+1 for padding token)\n","y_voc = y_tokenizer.num_words + 1\n","\n","print(\"Size of vocabulary in Y = {}\".format(y_voc))"]},{"cell_type":"code","execution_count":null,"id":"ff2112f5","metadata":{"id":"ff2112f5"},"outputs":[],"source":["ind = []\n","\n","for i in range(len(y_train)):\n","    cnt = 0\n","    for j in y_train[i]:\n","        if j != 0:\n","            cnt = cnt + 1\n","    if cnt == 2:\n","        ind.append(i)\n","\n","y_train = np.delete(y_train, ind, axis=0)\n","x_train = np.delete(x_train, ind, axis=0)"]},{"cell_type":"code","execution_count":null,"id":"2c9c60e5","metadata":{"id":"2c9c60e5"},"outputs":[],"source":["ind = []\n","for i in range(len(y_validation)):\n","    cnt = 0\n","    for j in y_validation[i]:\n","        if j != 0:\n","            cnt = cnt + 1\n","    if cnt == 2:\n","        ind.append(i)\n","\n","y_validation = np.delete(y_validation, ind, axis=0)\n","x_validation = np.delete(x_validation, ind, axis=0)"]},{"cell_type":"code","execution_count":null,"id":"c7d696f3","metadata":{"id":"c7d696f3","outputId":"5ba2aa04-8a23-408e-fe28-bcff92f25af8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307841710,"user_tz":-330,"elapsed":3,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["26\n","26\n","5\n","5\n"]}],"source":["print(len(x_train))\n","print(len(y_train))\n","print(len(x_validation))\n","print(len(y_validation))"]},{"cell_type":"code","execution_count":null,"id":"9d729916","metadata":{"id":"9d729916","outputId":"efc4c8a8-4d85-41e6-bb6c-94bfadf8670f","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307849568,"user_tz":-330,"elapsed":412,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["[ 1 37  8 31 11 31 31  3 46 31 31 31  4 31  1  4 11  0  0  0  0  0  0  0\n","  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n","  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n","  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0\n","  0  0  0  0]\n","[1 0 0 0 0 0 0 0 0 0]\n"]}],"source":["print((x_train[0]))\n","print((y_train[0]))"]},{"cell_type":"code","execution_count":null,"id":"7fddef96","metadata":{"id":"7fddef96"},"outputs":[],"source":["from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","from tensorflow.keras.layers import Input, LSTM, Embedding, Dense, \\\n","    Concatenate, TimeDistributed\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.callbacks import EarlyStopping"]},{"cell_type":"code","execution_count":null,"id":"a60d9799","metadata":{"id":"a60d9799","outputId":"a2f0a420-c2ff-42a9-c4db-52345ce8e2a2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656307859310,"user_tz":-330,"elapsed":956,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"model\"\n","__________________________________________________________________________________________________\n"," Layer (type)                   Output Shape         Param #     Connected to                     \n","==================================================================================================\n"," input_1 (InputLayer)           [(None, 100)]        0           []                               \n","                                                                                                  \n"," embedding (Embedding)          (None, 100, 200)     11000       ['input_1[0][0]']                \n","                                                                                                  \n"," lstm (LSTM)                    [(None, 100, 300),   601200      ['embedding[0][0]']              \n","                                 (None, 300),                                                     \n","                                 (None, 300)]                                                     \n","                                                                                                  \n"," input_2 (InputLayer)           [(None, None)]       0           []                               \n","                                                                                                  \n"," lstm_1 (LSTM)                  [(None, 100, 300),   721200      ['lstm[0][0]']                   \n","                                 (None, 300),                                                     \n","                                 (None, 300)]                                                     \n","                                                                                                  \n"," embedding_1 (Embedding)        (None, None, 200)    600         ['input_2[0][0]']                \n","                                                                                                  \n"," lstm_2 (LSTM)                  [(None, 100, 300),   721200      ['lstm_1[0][0]']                 \n","                                 (None, 300),                                                     \n","                                 (None, 300)]                                                     \n","                                                                                                  \n"," lstm_3 (LSTM)                  [(None, None, 300),  601200      ['embedding_1[0][0]',            \n","                                 (None, 300),                     'lstm_2[0][1]',                 \n","                                 (None, 300)]                     'lstm_2[0][2]']                 \n","                                                                                                  \n"," time_distributed (TimeDistribu  (None, None, 3)     903         ['lstm_3[0][0]']                 \n"," ted)                                                                                             \n","                                                                                                  \n","==================================================================================================\n","Total params: 2,657,303\n","Trainable params: 2,657,303\n","Non-trainable params: 0\n","__________________________________________________________________________________________________\n"]}],"source":["latent_dim = 300\n","embedding_dim = 200\n","\n","# Encoder\n","encoder_inputs = Input(shape=(max_code_len, ))\n","\n","# Embedding layer\n","enc_emb = Embedding(x_voc, embedding_dim,\n","                    trainable=True)(encoder_inputs)\n","\n","# Encoder LSTM 1\n","encoder_lstm1 = LSTM(latent_dim, return_sequences=True,\n","                     return_state=True, dropout=0.4,\n","                     recurrent_dropout=0.4)\n","(encoder_output1, state_h1, state_c1) = encoder_lstm1(enc_emb)\n","\n","# Encoder LSTM 2\n","encoder_lstm2 = LSTM(latent_dim, return_sequences=True,\n","                     return_state=True, dropout=0.4,\n","                     recurrent_dropout=0.4)\n","(encoder_output2, state_h2, state_c2) = encoder_lstm2(encoder_output1)\n","\n","# Encoder LSTM 3\n","encoder_lstm3 = LSTM(latent_dim, return_state=True,\n","                     return_sequences=True, dropout=0.4,\n","                     recurrent_dropout=0.4)\n","(encoder_outputs, state_h, state_c) = encoder_lstm3(encoder_output2)\n","\n","# Set up the decoder, using encoder_states as the initial state\n","decoder_inputs = Input(shape=(None, ))\n","\n","# Embedding layer\n","dec_emb_layer = Embedding(y_voc, embedding_dim, trainable=True)\n","dec_emb = dec_emb_layer(decoder_inputs)\n","\n","# Decoder LSTM\n","decoder_lstm = LSTM(latent_dim, return_sequences=True,\n","                    return_state=True, dropout=0.4,\n","                    recurrent_dropout=0.2)\n","(decoder_outputs, decoder_fwd_state, decoder_back_state) = \\\n","    decoder_lstm(dec_emb, initial_state=[state_h, state_c])\n","\n","# Dense layer\n","decoder_dense = TimeDistributed(Dense(y_voc, activation='softmax'))\n","decoder_outputs = decoder_dense(decoder_outputs)\n","\n","# Define the model\n","model = Model([encoder_inputs, decoder_inputs], decoder_outputs)\n","\n","model.summary()"]},{"cell_type":"code","execution_count":null,"id":"a33c6653","metadata":{"id":"a33c6653"},"outputs":[],"source":["model.compile(optimizer='rmsprop', loss='sparse_categorical_crossentropy')\n","\n","es = EarlyStopping(monitor='val_loss', mode='min', verbose=1, patience=2)"]},{"cell_type":"code","execution_count":null,"id":"0d424e9f","metadata":{"id":"0d424e9f","outputId":"4f84172f-b12f-4944-91d1-e3da86ead958","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656308085765,"user_tz":-330,"elapsed":213203,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","1/1 [==============================] - 15s 15s/step - loss: 1.0934 - val_loss: 0.4859\n","Epoch 2/50\n","1/1 [==============================] - 4s 4s/step - loss: 0.4933 - val_loss: 5.4697e-05\n","Epoch 3/50\n","1/1 [==============================] - 4s 4s/step - loss: 5.8111e-05 - val_loss: 4.4455e-05\n","Epoch 4/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.7530e-05 - val_loss: 3.7817e-05\n","Epoch 5/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.0121e-05 - val_loss: 3.3059e-05\n","Epoch 6/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.5381e-05 - val_loss: 2.9324e-05\n","Epoch 7/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.1599e-05 - val_loss: 2.6276e-05\n","Epoch 8/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.8139e-05 - val_loss: 2.3735e-05\n","Epoch 9/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.5885e-05 - val_loss: 2.1590e-05\n","Epoch 10/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.4190e-05 - val_loss: 1.9656e-05\n","Epoch 11/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.1337e-05 - val_loss: 1.8040e-05\n","Epoch 12/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.9523e-05 - val_loss: 1.6599e-05\n","Epoch 13/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.8156e-05 - val_loss: 1.5338e-05\n","Epoch 14/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.7105e-05 - val_loss: 1.4199e-05\n","Epoch 15/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.5605e-05 - val_loss: 1.3153e-05\n","Epoch 16/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.4767e-05 - val_loss: 1.2292e-05\n","Epoch 17/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.3805e-05 - val_loss: 1.1404e-05\n","Epoch 18/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.2794e-05 - val_loss: 1.0636e-05\n","Epoch 19/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.2019e-05 - val_loss: 9.9340e-06\n","Epoch 20/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.0825e-05 - val_loss: 9.2452e-06\n","Epoch 21/50\n","1/1 [==============================] - 4s 4s/step - loss: 1.0220e-05 - val_loss: 8.7287e-06\n","Epoch 22/50\n","1/1 [==============================] - 4s 4s/step - loss: 9.7246e-06 - val_loss: 8.1856e-06\n","Epoch 23/50\n","1/1 [==============================] - 4s 4s/step - loss: 9.4021e-06 - val_loss: 7.6823e-06\n","Epoch 24/50\n","1/1 [==============================] - 4s 4s/step - loss: 8.3818e-06 - val_loss: 7.2187e-06\n","Epoch 25/50\n","1/1 [==============================] - 6s 6s/step - loss: 8.1525e-06 - val_loss: 6.7949e-06\n","Epoch 26/50\n","1/1 [==============================] - 7s 7s/step - loss: 7.7246e-06 - val_loss: 6.3843e-06\n","Epoch 27/50\n","1/1 [==============================] - 6s 6s/step - loss: 7.2045e-06 - val_loss: 6.0134e-06\n","Epoch 28/50\n","1/1 [==============================] - 4s 4s/step - loss: 6.8249e-06 - val_loss: 5.6955e-06\n","Epoch 29/50\n","1/1 [==============================] - 4s 4s/step - loss: 6.4617e-06 - val_loss: 5.4041e-06\n","Epoch 30/50\n","1/1 [==============================] - 5s 5s/step - loss: 6.1163e-06 - val_loss: 5.0465e-06\n","Epoch 31/50\n","1/1 [==============================] - 4s 4s/step - loss: 5.8636e-06 - val_loss: 4.7948e-06\n","Epoch 32/50\n","1/1 [==============================] - 4s 4s/step - loss: 5.4627e-06 - val_loss: 4.5432e-06\n","Epoch 33/50\n","1/1 [==============================] - 4s 4s/step - loss: 5.0465e-06 - val_loss: 4.2942e-06\n","Epoch 34/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.9451e-06 - val_loss: 4.0796e-06\n","Epoch 35/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.6588e-06 - val_loss: 3.8677e-06\n","Epoch 36/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.4561e-06 - val_loss: 3.6955e-06\n","Epoch 37/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.1993e-06 - val_loss: 3.4835e-06\n","Epoch 38/50\n","1/1 [==============================] - 4s 4s/step - loss: 4.0149e-06 - val_loss: 3.3114e-06\n","Epoch 39/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.8636e-06 - val_loss: 3.1392e-06\n","Epoch 40/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.5681e-06 - val_loss: 3.0094e-06\n","Epoch 41/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.3755e-06 - val_loss: 2.8372e-06\n","Epoch 42/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.3175e-06 - val_loss: 2.7153e-06\n","Epoch 43/50\n","1/1 [==============================] - 4s 4s/step - loss: 3.0663e-06 - val_loss: 2.5829e-06\n","Epoch 44/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.9563e-06 - val_loss: 2.4769e-06\n","Epoch 45/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.7846e-06 - val_loss: 2.3577e-06\n","Epoch 46/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.6761e-06 - val_loss: 2.2517e-06\n","Epoch 47/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.5452e-06 - val_loss: 2.1855e-06\n","Epoch 48/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.4147e-06 - val_loss: 2.0398e-06\n","Epoch 49/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.3694e-06 - val_loss: 1.9736e-06\n","Epoch 50/50\n","1/1 [==============================] - 4s 4s/step - loss: 2.1773e-06 - val_loss: 1.8676e-06\n"]}],"source":["history = model.fit(\n","    [x_train, y_train[:, :-1]],\n","    y_train.reshape(y_train.shape[0], y_train.shape[1], 1)[:, 1:],\n","    epochs=50,\n","    callbacks=[es],\n","    batch_size=128,\n","    validation_data=([x_validation, y_validation[:, :-1]],\n","                     y_validation.reshape(y_validation.shape[0], y_validation.shape[1], 1)[:\n","                     , 1:]),\n","    )"]},{"cell_type":"code","execution_count":null,"id":"6e847593","metadata":{"id":"6e847593","outputId":"74695d4b-6cf8-4fc3-d948-51cfd6d9ea34","colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"status":"ok","timestamp":1656308085766,"user_tz":-330,"elapsed":66,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["from matplotlib import pyplot\n","\n","pyplot.plot(history.history['loss'], label='train')\n","pyplot.plot(history.history['val_loss'], label='test')\n","pyplot.legend()\n","pyplot.show()"]},{"cell_type":"code","execution_count":null,"id":"c70a0ceb","metadata":{"id":"c70a0ceb"},"outputs":[],"source":["reverse_target_word_index = y_tokenizer.index_word\n","reverse_source_word_index = x_tokenizer.index_word\n","target_word_index = y_tokenizer.word_index"]},{"cell_type":"code","execution_count":null,"id":"c63c15dc","metadata":{"id":"c63c15dc","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"error","timestamp":1656321991690,"user_tz":-330,"elapsed":3,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}},"outputId":"f8647580-0c6a-4c7e-a7a1-54d877a5c356"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-5-5d7725716f1c>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m encoder_model = Model(inputs=encoder_inputs, outputs=[encoder_outputs,\n\u001b[0m\u001b[1;32m      2\u001b[0m                       state_h, state_c])\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;31m# Decoder setup\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'Model' is not defined"]}],"source":["encoder_model = Model(inputs=encoder_inputs, outputs=[encoder_outputs,\n","                      state_h, state_c])\n","\n","# Decoder setup\n","\n","# Below tensors will hold the states of the previous time step\n","decoder_state_input_h = Input(shape=(latent_dim, ))\n","decoder_state_input_c = Input(shape=(latent_dim, ))\n","decoder_hidden_state_input = Input(shape=(max_code_len, latent_dim))\n","\n","# Get the embeddings of the decoder sequence\n","dec_emb2 = dec_emb_layer(decoder_inputs)\n","\n","# To predict the next word in the sequence, set the initial states to the states from the previous time step\n","(decoder_outputs2, state_h2, state_c2) = decoder_lstm(dec_emb2,\n","        initial_state=[decoder_state_input_h, decoder_state_input_c])\n","\n","# A dense softmax layer to generate prob dist. over the target vocabulary\n","decoder_outputs2 = decoder_dense(decoder_outputs2)\n","\n","# Final decoder model\n","decoder_model = Model([decoder_inputs] + [decoder_hidden_state_input,\n","                      decoder_state_input_h, decoder_state_input_c],\n","                      [decoder_outputs2] + [state_h2, state_c2])"]},{"cell_type":"code","execution_count":null,"id":"67f98b91","metadata":{"id":"67f98b91"},"outputs":[],"source":["def decode_sequence(input_seq):\n","\n","    # Encode the input as state vectors.\n","    (e_out, e_h, e_c) = encoder_model.predict(input_seq)\n","\n","    # Generate empty target sequence of length 1\n","    target_seq = np.zeros((1, 1))\n","\n","    # Populate the first word of target sequence with the start word.\n","    target_seq[0, 0] = target_word_index['sostok']\n","\n","    stop_condition = False\n","    decoded_sentence = ''\n","\n","    while not stop_condition:\n","        (output_tokens, h, c) = decoder_model.predict([target_seq]\n","                + [e_out, e_h, e_c])\n","\n","        # Sample a token\n","        sampled_token_index = np.argmax(output_tokens[0, -1, :])\n","        sampled_token = reverse_target_word_index[sampled_token_index]\n","\n","        if sampled_token != 'eostok':\n","            decoded_sentence += ' ' + sampled_token\n","\n","        # Exit condition: either hit max length or find the stop word.\n","        if sampled_token == 'eostok' or len(decoded_sentence.split()) \\\n","            >= max_summary_len - 1:\n","            stop_condition = True\n","\n","        # Update the target sequence (of length 1)\n","        target_seq = np.zeros((1, 1))\n","        target_seq[0, 0] = sampled_token_index\n","\n","        # Update internal states\n","        (e_h, e_c) = (h, c)\n","\n","    return decoded_sentence"]},{"cell_type":"code","execution_count":null,"id":"94d54012","metadata":{"id":"94d54012"},"outputs":[],"source":["def seq2summary(input_seq):\n","    newString = ''\n","    for i in input_seq:\n","        if i != 0 and i != target_word_index['sostok'] and i \\\n","            != target_word_index['eostok']:\n","            newString = newString + reverse_target_word_index[i] + ' '\n","\n","    return newString\n","\n","\n","# To convert sequence to text\n","def seq2text(input_seq):\n","    newString = ''\n","    for i in input_seq:\n","        if i != 0:\n","            newString = newString + reverse_source_word_index[i] + ' '\n","\n","    return newString"]},{"cell_type":"code","execution_count":null,"id":"6280097b","metadata":{"id":"6280097b","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"error","timestamp":1656321978886,"user_tz":-330,"elapsed":13,"user":{"displayName":"Anshuman Singh","userId":"06230192885831480549"}},"outputId":"8fff17e1-506b-4ed8-87f1-3af931053b64"},"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-184d28af3253>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m19\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m     \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'Code:'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseq2text\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      3\u001b[0m     \u001b[0mprint\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;34m'Original summary:'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mseq2summary\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_train\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m     print ('Predicted summary:', decode_sequence(x_train[i].reshape(1,\n\u001b[1;32m      5\u001b[0m            max_code_len)))\n","\u001b[0;31mNameError\u001b[0m: name 'x_train' is not defined"]}],"source":["for i in range(0, 19):\n","    print ('Code:', seq2text(x_train[i]))\n","    print ('Original summary:', seq2summary(y_train[i]))\n","    print ('Predicted summary:', decode_sequence(x_train[i].reshape(1,\n","           max_code_len)))\n","    print ('\\n')\n"]},{"cell_type":"code","source":[],"metadata":{"id":"c6UKL99iC8Vi"},"id":"c6UKL99iC8Vi","execution_count":null,"outputs":[]}],"metadata":{"kernelspec":{"display_name":"sri_py","language":"python","name":"sri_py"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.13"},"colab":{"provenance":[]}},"nbformat":4,"nbformat_minor":5}
